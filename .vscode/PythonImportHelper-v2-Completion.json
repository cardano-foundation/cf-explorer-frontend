[
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "Template",
        "importPath": "string",
        "description": "string",
        "isExtraImport": true,
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "array",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "array",
        "description": "array",
        "detail": "array",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "decimal",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "decimal",
        "description": "decimal",
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "getcwd",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "random",
        "importPath": "numpy",
        "description": "numpy",
        "isExtraImport": true,
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "Client",
        "importPath": "client.Client",
        "description": "client.Client",
        "isExtraImport": true,
        "detail": "client.Client",
        "documentation": {}
    },
    {
        "label": "Client",
        "importPath": "client.Client",
        "description": "client.Client",
        "isExtraImport": true,
        "detail": "client.Client",
        "documentation": {}
    },
    {
        "label": "Block",
        "importPath": "entity.Block",
        "description": "entity.Block",
        "isExtraImport": true,
        "detail": "entity.Block",
        "documentation": {}
    },
    {
        "label": "getopt",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "getopt",
        "description": "getopt",
        "detail": "getopt",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "DataManager",
        "importPath": "service.DataManager",
        "description": "service.DataManager",
        "isExtraImport": true,
        "detail": "service.DataManager",
        "documentation": {}
    },
    {
        "label": "os,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os.",
        "description": "os.",
        "detail": "os.",
        "documentation": {}
    },
    {
        "label": "Client",
        "kind": 6,
        "importPath": "cypress.smoke.client.Client",
        "description": "cypress.smoke.client.Client",
        "peekOfCode": "class Client():\n  \"\"\"\n  Single client class\n  \"\"\"\n  url = \"https://w3schools.com/python/demopage.htm\";\n  def setUrl(self, url: string):\n    self.url = url\n    return self\n  def get(self):\n    result = False",
        "detail": "cypress.smoke.client.Client",
        "documentation": {}
    },
    {
        "label": "Block",
        "kind": 6,
        "importPath": "cypress.smoke.entity.Block",
        "description": "cypress.smoke.entity.Block",
        "peekOfCode": "class Block():\n  \"\"\"\n  Block\n  \"\"\"\n  def __init__(self, hash, epoch_no, abs_slot, epoch_slot, block_height, block_size, block_time, tx_count, vrf_key,\n               pool, op_cert_counter, proto_major, proto_minor):\n    self.vrf_key = vrf_key\n    self.tx_count = tx_count\n    self.block_time = block_time\n    self.block_size = block_size",
        "detail": "cypress.smoke.entity.Block",
        "documentation": {}
    },
    {
        "label": "Epoch",
        "kind": 6,
        "importPath": "cypress.smoke.entity.Epoch",
        "description": "cypress.smoke.entity.Epoch",
        "peekOfCode": "class Epoch():\n  \"\"\"\n  Epoch\n  \"\"\"\n  def __init__(self, epoch_no, out_sum, fees, tx_count, blk_count,\n               start_time, end_time, first_block_time,\n               last_block_time,\n               active_stake, total_rewards, avg_blk_reward):\n    self.tx_count = tx_count\n    self.fees = fees",
        "detail": "cypress.smoke.entity.Epoch",
        "documentation": {}
    },
    {
        "label": "DataManager",
        "kind": 6,
        "importPath": "cypress.smoke.service.DataManager",
        "description": "cypress.smoke.service.DataManager",
        "peekOfCode": "class DataManager():\n  \"\"\"\n   Get information from client and write cypress test file\n   \"\"\"\n  client: object\n  def __init__(self, client: Client):\n    self.client = client\n    open('../e2e/Dynamic/blockDyn.cy.ts', 'w')\n    open('../e2e/Dynamic/epochDyn.cy.ts', 'w')\n    open('../e2e/Dynamic/transactionDyn.cy.ts', 'w')",
        "detail": "cypress.smoke.service.DataManager",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "cypress.smoke.CypressDynamicScript",
        "description": "cypress.smoke.CypressDynamicScript",
        "peekOfCode": "def main(argv):\n  opts, args = getopt.getopt(argv, \"h\", [\"blockl=\", \"epochl=\", \"blocks=\", \"blocke=\", \"epochs=\", \"epoche=\"])\n  blockLimit = 5\n  epochLimit = 5\n  blockStart = 1\n  blockEnd = 6015246\n  epochStart = 1\n  epochEnd = 425\n  for opt, arg in opts:\n    match opt:",
        "detail": "cypress.smoke.CypressDynamicScript",
        "documentation": {}
    },
    {
        "label": "socket_filter",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "socket_filter = None\nif len(sys.argv) >= 3:\n    socket_filter = sys.argv[2].strip()\nif socket_filter == None:\n    print \"scanning for socket with the most packets\"\n    file = open(sys.argv[1], 'rb')\n    sockets = {}\n    for l in file:\n        if not 'our_delay' in l: continue\n        try:",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "file",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "file = open(sys.argv[1], 'rb')\nout_file = 'utp.out%s' % socket_filter;\nout = open(out_file, 'wb')\ndelay_samples = 'dots lc rgb \"blue\"'\ndelay_base = 'steps lw 2 lc rgb \"purple\"'\ntarget_delay = 'steps lw 2 lc rgb \"red\"'\noff_target = 'dots lc rgb \"blue\"'\ncwnd = 'steps lc rgb \"green\"'\nwindow_size = 'steps lc rgb \"sea-green\"'\nrtt = 'lines lc rgb \"light-blue\"'",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "out_file",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "out_file = 'utp.out%s' % socket_filter;\nout = open(out_file, 'wb')\ndelay_samples = 'dots lc rgb \"blue\"'\ndelay_base = 'steps lw 2 lc rgb \"purple\"'\ntarget_delay = 'steps lw 2 lc rgb \"red\"'\noff_target = 'dots lc rgb \"blue\"'\ncwnd = 'steps lc rgb \"green\"'\nwindow_size = 'steps lc rgb \"sea-green\"'\nrtt = 'lines lc rgb \"light-blue\"'\nmetrics = {",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "out",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "out = open(out_file, 'wb')\ndelay_samples = 'dots lc rgb \"blue\"'\ndelay_base = 'steps lw 2 lc rgb \"purple\"'\ntarget_delay = 'steps lw 2 lc rgb \"red\"'\noff_target = 'dots lc rgb \"blue\"'\ncwnd = 'steps lc rgb \"green\"'\nwindow_size = 'steps lc rgb \"sea-green\"'\nrtt = 'lines lc rgb \"light-blue\"'\nmetrics = {\n    'our_delay':['our delay (ms)', 'x1y2', delay_samples],",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "delay_samples",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "delay_samples = 'dots lc rgb \"blue\"'\ndelay_base = 'steps lw 2 lc rgb \"purple\"'\ntarget_delay = 'steps lw 2 lc rgb \"red\"'\noff_target = 'dots lc rgb \"blue\"'\ncwnd = 'steps lc rgb \"green\"'\nwindow_size = 'steps lc rgb \"sea-green\"'\nrtt = 'lines lc rgb \"light-blue\"'\nmetrics = {\n    'our_delay':['our delay (ms)', 'x1y2', delay_samples],\n    'upload_rate':['send rate (B/s)', 'x1y1', 'lines'],",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "delay_base",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "delay_base = 'steps lw 2 lc rgb \"purple\"'\ntarget_delay = 'steps lw 2 lc rgb \"red\"'\noff_target = 'dots lc rgb \"blue\"'\ncwnd = 'steps lc rgb \"green\"'\nwindow_size = 'steps lc rgb \"sea-green\"'\nrtt = 'lines lc rgb \"light-blue\"'\nmetrics = {\n    'our_delay':['our delay (ms)', 'x1y2', delay_samples],\n    'upload_rate':['send rate (B/s)', 'x1y1', 'lines'],\n    'max_window':['cwnd (B)', 'x1y1', cwnd],",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "target_delay",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "target_delay = 'steps lw 2 lc rgb \"red\"'\noff_target = 'dots lc rgb \"blue\"'\ncwnd = 'steps lc rgb \"green\"'\nwindow_size = 'steps lc rgb \"sea-green\"'\nrtt = 'lines lc rgb \"light-blue\"'\nmetrics = {\n    'our_delay':['our delay (ms)', 'x1y2', delay_samples],\n    'upload_rate':['send rate (B/s)', 'x1y1', 'lines'],\n    'max_window':['cwnd (B)', 'x1y1', cwnd],\n    'target_delay':['target delay (ms)', 'x1y2', target_delay],",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "off_target",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "off_target = 'dots lc rgb \"blue\"'\ncwnd = 'steps lc rgb \"green\"'\nwindow_size = 'steps lc rgb \"sea-green\"'\nrtt = 'lines lc rgb \"light-blue\"'\nmetrics = {\n    'our_delay':['our delay (ms)', 'x1y2', delay_samples],\n    'upload_rate':['send rate (B/s)', 'x1y1', 'lines'],\n    'max_window':['cwnd (B)', 'x1y1', cwnd],\n    'target_delay':['target delay (ms)', 'x1y2', target_delay],\n    'cur_window':['bytes in-flight (B)', 'x1y1', window_size],",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "cwnd",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "cwnd = 'steps lc rgb \"green\"'\nwindow_size = 'steps lc rgb \"sea-green\"'\nrtt = 'lines lc rgb \"light-blue\"'\nmetrics = {\n    'our_delay':['our delay (ms)', 'x1y2', delay_samples],\n    'upload_rate':['send rate (B/s)', 'x1y1', 'lines'],\n    'max_window':['cwnd (B)', 'x1y1', cwnd],\n    'target_delay':['target delay (ms)', 'x1y2', target_delay],\n    'cur_window':['bytes in-flight (B)', 'x1y1', window_size],\n    'cur_window_packets':['number of packets in-flight', 'x1y2', 'steps'],",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "window_size",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "window_size = 'steps lc rgb \"sea-green\"'\nrtt = 'lines lc rgb \"light-blue\"'\nmetrics = {\n    'our_delay':['our delay (ms)', 'x1y2', delay_samples],\n    'upload_rate':['send rate (B/s)', 'x1y1', 'lines'],\n    'max_window':['cwnd (B)', 'x1y1', cwnd],\n    'target_delay':['target delay (ms)', 'x1y2', target_delay],\n    'cur_window':['bytes in-flight (B)', 'x1y1', window_size],\n    'cur_window_packets':['number of packets in-flight', 'x1y2', 'steps'],\n    'packet_size':['current packet size (B)', 'x1y2', 'steps'],",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "rtt",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "rtt = 'lines lc rgb \"light-blue\"'\nmetrics = {\n    'our_delay':['our delay (ms)', 'x1y2', delay_samples],\n    'upload_rate':['send rate (B/s)', 'x1y1', 'lines'],\n    'max_window':['cwnd (B)', 'x1y1', cwnd],\n    'target_delay':['target delay (ms)', 'x1y2', target_delay],\n    'cur_window':['bytes in-flight (B)', 'x1y1', window_size],\n    'cur_window_packets':['number of packets in-flight', 'x1y2', 'steps'],\n    'packet_size':['current packet size (B)', 'x1y2', 'steps'],\n    'rtt':['rtt (ms)', 'x1y2', rtt],",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "metrics",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "metrics = {\n    'our_delay':['our delay (ms)', 'x1y2', delay_samples],\n    'upload_rate':['send rate (B/s)', 'x1y1', 'lines'],\n    'max_window':['cwnd (B)', 'x1y1', cwnd],\n    'target_delay':['target delay (ms)', 'x1y2', target_delay],\n    'cur_window':['bytes in-flight (B)', 'x1y1', window_size],\n    'cur_window_packets':['number of packets in-flight', 'x1y2', 'steps'],\n    'packet_size':['current packet size (B)', 'x1y2', 'steps'],\n    'rtt':['rtt (ms)', 'x1y2', rtt],\n    'off_target':['off-target (ms)', 'x1y2', off_target],",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "histogram_quantization",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "histogram_quantization = 1\nsocket_index = None\ncolumns = []\nbegin = None\ntitle = \"-\"\npacket_loss = 0\npacket_timeout = 0\ndelay_histogram = {}\nwindow_size = {'0': 0, '1': 0}\n# [35301484] 0x00ec1190: actual_delay:1021583 our_delay:102 their_delay:-1021345 off_target:297 max_window:2687 upload_rate:18942 delay_base:1021481154 delay_sum:-1021242 target_delay:400 acked_bytes:1441 cur_window:2882 scaled_gain:2.432",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "socket_index",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "socket_index = None\ncolumns = []\nbegin = None\ntitle = \"-\"\npacket_loss = 0\npacket_timeout = 0\ndelay_histogram = {}\nwindow_size = {'0': 0, '1': 0}\n# [35301484] 0x00ec1190: actual_delay:1021583 our_delay:102 their_delay:-1021345 off_target:297 max_window:2687 upload_rate:18942 delay_base:1021481154 delay_sum:-1021242 target_delay:400 acked_bytes:1441 cur_window:2882 scaled_gain:2.432\ncounter = 0",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "columns",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "columns = []\nbegin = None\ntitle = \"-\"\npacket_loss = 0\npacket_timeout = 0\ndelay_histogram = {}\nwindow_size = {'0': 0, '1': 0}\n# [35301484] 0x00ec1190: actual_delay:1021583 our_delay:102 their_delay:-1021345 off_target:297 max_window:2687 upload_rate:18942 delay_base:1021481154 delay_sum:-1021242 target_delay:400 acked_bytes:1441 cur_window:2882 scaled_gain:2.432\ncounter = 0\nprint \"reading log file\"",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "begin",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "begin = None\ntitle = \"-\"\npacket_loss = 0\npacket_timeout = 0\ndelay_histogram = {}\nwindow_size = {'0': 0, '1': 0}\n# [35301484] 0x00ec1190: actual_delay:1021583 our_delay:102 their_delay:-1021345 off_target:297 max_window:2687 upload_rate:18942 delay_base:1021481154 delay_sum:-1021242 target_delay:400 acked_bytes:1441 cur_window:2882 scaled_gain:2.432\ncounter = 0\nprint \"reading log file\"\nfor l in file:",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "title",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "title = \"-\"\npacket_loss = 0\npacket_timeout = 0\ndelay_histogram = {}\nwindow_size = {'0': 0, '1': 0}\n# [35301484] 0x00ec1190: actual_delay:1021583 our_delay:102 their_delay:-1021345 off_target:297 max_window:2687 upload_rate:18942 delay_base:1021481154 delay_sum:-1021242 target_delay:400 acked_bytes:1441 cur_window:2882 scaled_gain:2.432\ncounter = 0\nprint \"reading log file\"\nfor l in file:\n    if \"UTP_Connect\" in l:",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "packet_loss",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "packet_loss = 0\npacket_timeout = 0\ndelay_histogram = {}\nwindow_size = {'0': 0, '1': 0}\n# [35301484] 0x00ec1190: actual_delay:1021583 our_delay:102 their_delay:-1021345 off_target:297 max_window:2687 upload_rate:18942 delay_base:1021481154 delay_sum:-1021242 target_delay:400 acked_bytes:1441 cur_window:2882 scaled_gain:2.432\ncounter = 0\nprint \"reading log file\"\nfor l in file:\n    if \"UTP_Connect\" in l:\n        title = l[:-2]",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "packet_timeout",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "packet_timeout = 0\ndelay_histogram = {}\nwindow_size = {'0': 0, '1': 0}\n# [35301484] 0x00ec1190: actual_delay:1021583 our_delay:102 their_delay:-1021345 off_target:297 max_window:2687 upload_rate:18942 delay_base:1021481154 delay_sum:-1021242 target_delay:400 acked_bytes:1441 cur_window:2882 scaled_gain:2.432\ncounter = 0\nprint \"reading log file\"\nfor l in file:\n    if \"UTP_Connect\" in l:\n        title = l[:-2]\n        if socket_filter != None:",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "delay_histogram",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "delay_histogram = {}\nwindow_size = {'0': 0, '1': 0}\n# [35301484] 0x00ec1190: actual_delay:1021583 our_delay:102 their_delay:-1021345 off_target:297 max_window:2687 upload_rate:18942 delay_base:1021481154 delay_sum:-1021242 target_delay:400 acked_bytes:1441 cur_window:2882 scaled_gain:2.432\ncounter = 0\nprint \"reading log file\"\nfor l in file:\n    if \"UTP_Connect\" in l:\n        title = l[:-2]\n        if socket_filter != None:\n            title += ' socket: %s' % socket_filter",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "window_size",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "window_size = {'0': 0, '1': 0}\n# [35301484] 0x00ec1190: actual_delay:1021583 our_delay:102 their_delay:-1021345 off_target:297 max_window:2687 upload_rate:18942 delay_base:1021481154 delay_sum:-1021242 target_delay:400 acked_bytes:1441 cur_window:2882 scaled_gain:2.432\ncounter = 0\nprint \"reading log file\"\nfor l in file:\n    if \"UTP_Connect\" in l:\n        title = l[:-2]\n        if socket_filter != None:\n            title += ' socket: %s' % socket_filter\n        else:",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "counter",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "counter = 0\nprint \"reading log file\"\nfor l in file:\n    if \"UTP_Connect\" in l:\n        title = l[:-2]\n        if socket_filter != None:\n            title += ' socket: %s' % socket_filter\n        else:\n            title += ' sum of all sockets'\n        continue",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "out",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "out = open('%s.histogram' % out_file, 'wb')\nfor d,f in delay_histogram.iteritems():\n    print >>out, float(d*histogram_quantization) + histogram_quantization / 2, f\nout.close()\nplot = [\n    {\n        'data': ['upload_rate', 'max_window', 'cur_window', 'wnduser', 'cur_window_packets', 'packet_size', 'rtt'],\n        'title': 'send-packet-size',\n        'y1': 'Bytes',\n        'y2': 'Time (ms)'",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "plot",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "plot = [\n    {\n        'data': ['upload_rate', 'max_window', 'cur_window', 'wnduser', 'cur_window_packets', 'packet_size', 'rtt'],\n        'title': 'send-packet-size',\n        'y1': 'Bytes',\n        'y2': 'Time (ms)'\n    },\n    {\n        'data': ['our_delay', 'max_window', 'target_delay', 'cur_window', 'wnduser', 'cur_window_packets'],\n        'title': 'uploading',",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "out",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "out = open('utp.gnuplot', 'w+')\nfiles = ''\n#print >>out, 'set xtics 0, 20'\nprint >>out, \"set term png size 1280,800\"\nprint >>out, 'set output \"%s.delays.png\"' % out_file\nprint >>out, 'set xrange [0:250]'\nprint >>out, 'set xlabel \"delay (ms)\"'\nprint >>out, 'set boxwidth 1'\nprint >>out, 'set style fill solid'\nprint >>out, 'set ylabel \"number of packets\"'",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    },
    {
        "label": "files",
        "kind": 5,
        "importPath": "node_modules.utp-native.deps.libutp.parse_log",
        "description": "node_modules.utp-native.deps.libutp.parse_log",
        "peekOfCode": "files = ''\n#print >>out, 'set xtics 0, 20'\nprint >>out, \"set term png size 1280,800\"\nprint >>out, 'set output \"%s.delays.png\"' % out_file\nprint >>out, 'set xrange [0:250]'\nprint >>out, 'set xlabel \"delay (ms)\"'\nprint >>out, 'set boxwidth 1'\nprint >>out, 'set style fill solid'\nprint >>out, 'set ylabel \"number of packets\"'\nprint >>out, 'plot \"%s.histogram\" using 1:2 with boxes' % out_file",
        "detail": "node_modules.utp-native.deps.libutp.parse_log",
        "documentation": {}
    }
]