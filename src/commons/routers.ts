export const routers = {
  HOME: "/",
  BLOCK_LIST: "/blocks",
  BLOCK_DETAIL: "/block/:blockId",
  TRANSACTION_LIST: "/transactions",
  TRANSACTION_DETAIL: "/transaction/:trxHash/:tabActive?",
  EPOCH_LIST: "/epochs",
  EPOCH_DETAIL: "/epoch/:epochId",
  DELEGATION_POOLS: "/delegation-pools",
  DELEGATION_POOL_DETAIL: "/delegation-pool/:poolId",
  REGISTRATION_POOLS: "/registration-pools/:poolType?",
  STORY_LIST: "/stories",
  STORY_DETAIL: "/story/:storyId",
  ADDRESS_LIST: "/addresses",
  ADDRESS_DETAIL: "/address/:address",
  TOKEN_LIST: "/tokens",
  TOKEN_DETAIL: "/token/:tokenId",
  STAKE_LIST: "/stakes/:poolType?",
  STAKE_DETAIL: "/stake/:stakeId/:tabActive?",
  CONTRACT_LIST: "/contracts",
  CONTRACT_DETAIL: "/contracts/:address/:tabActive?",
  NFT_LIST: "/nfts",
  POLICY_DETAIL: "/policy/:policyId",
  NFT_DETAIL: "/nft/:nftId",
  TOP_DELEGATOR: "/top-delegator",
  SEARCH: "/search",
  ACCOUNT: "/account",
  MY_PROFILE: "/account/profile",
  BOOKMARK: "/account/bookmark",
  PRIVATE_NOTES: "/account/notes",
  NOT_FOUND: "/*",
};

export const details = {
  block: (blockId?: number | string) => routers.BLOCK_DETAIL.replace(":blockId", `${blockId ?? ""}`),
  transaction: (trxHash?: string, tab = "summary") =>
    routers.TRANSACTION_DETAIL.replace(":trxHash", trxHash ?? "").replace(":tabActive?", tab),
  epoch: (epochId?: number | string) => routers.EPOCH_DETAIL.replace(":epochId", `${epochId ?? ""}`),
  delegation: (poolId?: number | string) => routers.DELEGATION_POOL_DETAIL.replace(":poolId", `${poolId}` ?? ""),
  story: (storyId?: string) => routers.STORY_DETAIL.replace(":storyId", storyId ?? ""),
  address: (address?: string) => routers.ADDRESS_DETAIL.replace(":address", address ?? ""),
  token: (tokenId?: string) => routers.TOKEN_DETAIL.replace(":tokenId", tokenId ?? ""),
  stake: (stakeId?: string, tab = "delegation") =>
    routers.STAKE_DETAIL.replace(":stakeId", stakeId ?? "").replace(":tabActive?", tab),
  nft: (nftId?: string) => routers.NFT_DETAIL.replace(":nftId", nftId ?? ""),
  policyDetail: (policyId?: string) => routers.POLICY_DETAIL.replace(":policyId", policyId ?? ""),
  contract: (address?: string, tab = "transaction") =>
    routers.CONTRACT_DETAIL.replace(":address", address ?? "").replace(":tabActive?", tab),
};
